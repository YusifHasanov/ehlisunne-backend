// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
//typescrirt
generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Video {
  id          String   @id @default(cuid()) @map("_id")
  videoId     String   @unique
  publishedAt DateTime
  thumbnail   String
  title       String
  playlistId  String   @map("playlist_id")
  playlist    Playlist @relation(fields: [playlistId], references: [playlistId])
}

model Playlist {
  id          String   @id @default(cuid()) @map("_id")
  playlistId  String   @unique
  publishedAt DateTime
  thumbnail   String
  title       String
  videos      Video[]
}

model Author {
  id       String    @id @default(cuid()) @map("_id")
  name     String
  image    String
  articles Article[]
  books    Book[]
}

model Book {
  id          String   @id @default(cuid()) @map("_id")
  title       String
  authorId    String   @map("author_id")
  author      Author   @relation(fields: [authorId], references: [id])
  description String
  publishedAt DateTime
}

model YoutubeStatistics {
  id               String  @id @default(cuid()) @map("_id")
  viewCount        String
  subscriberCount  String
  hiddenSubscriber Boolean
  videoCount       String
}

model Article {
  id          String            @id @default(cuid()) @map("_id")
  title       String
  content     String
  publishedAt DateTime
  authorId    String            @map("author_id")
  author      Author            @relation(fields: [authorId], references: [id])
  categories  CategoryArticle[]
}

model Category {
  id        String             @id @default(cuid()) @map("_id")
  name      String
  isSub     Boolean            @default(false)
  parentId  String?            @default(cuid())
  parent    Category?          @relation("ParentSubCategories", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  childs    Category[]         @relation("ParentSubCategories")
  articles  CategoryArticle[]
  questions CategoryQuestion[]
}

model CategoryArticle {
  id         String   @id @default(cuid()) @map("_id")
  category   Category @relation(fields: [categoryId], references: [id])
  article    Article  @relation(fields: [articleId], references: [id])
  categoryId String
  articleId  String
}

model CategoryQuestion {
  id         String   @id @default(cuid()) @map("_id")
  category   Category @relation(fields: [categoryId], references: [id])
  question   Question @relation(fields: [questionId], references: [id])
  categoryId String
  questionId String
}

model Question {
  id         String             @id @default(cuid()) @map("_id")
  question   String
  answer     String
  categoryId String             @map("category_id")
  categories CategoryQuestion[]
}
